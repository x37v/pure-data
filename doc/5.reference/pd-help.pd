#N canvas 789 82 583 622 12;
#N canvas 0 0 600 400 (subpatch) 0;
#X restore 23 13 pd;
#X text 57 14 - subpatch;
#X obj 166 13 inlet;
#X text 224 12 - control inlet;
#X obj 376 12 inlet~;
#X text 446 12 - audio inlet;
#X obj 166 41 outlet;
#X text 224 43 - control outlet;
#X obj 376 40 outlet~;
#X text 446 40 - audio outlet;
#X text 54 91 Type "pd" into an object box to make a subpatch. When
in run mode you can click on the object to open the subpatch. You can
name the subpatch with an argument:;
#N canvas 156 300 518 221 my-subpatch 0;
#X text 49 96 this is a subpatch for the "pd" help window.;
#X restore 200 153 pd my-subpatch;
#X obj 262 367 print~;
#X obj 262 287 sig~ 12;
#X floatatom 118 291 0 0 0 0 - - -;
#X floatatom 118 364 0 0 0 0 - - -;
#X text 297 331 (check that audio is on), f 12;
#X text 101 255 messages in and out, f 12;
#X text 254 254 audio in and out, f 10;
#X text 58 571 see also:;
#X obj 142 571 block~;
#X obj 277 338 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#N canvas 571 169 535 606 up/downsampling 0;
#X obj 41 395 print~;
#X obj 59 369 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 137 397 print~;
#X obj 155 371 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 234 395 print~;
#X obj 252 369 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-tab 64 float 3;
#A 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
#X coords 0 1 64 -1 200 140 1;
#X restore 277 159 graph;
#X obj 349 395 s \$0-tab;
#X msg 349 368 const 0 \, 0 0 1;
#X obj 189 243 print~;
#X obj 189 218 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 37 191 tabreceive~ \$0-tab;
#N canvas 509 307 513 313 test-subpatch-upsampled 0;
#X obj 40 17 block~ 128 1 2;
#X obj 43 144 inlet~ hold;
#X obj 318 149 inlet~ lin;
#X obj 183 200 print~;
#X obj 201 174 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 43 204 print~;
#X obj 61 178 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 317 209 print~;
#X obj 334 183 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 42 49 Upsampling methods:;
#X text 41 109 sample/hold;
#X text 300 114 linear interpolation;
#X obj 183 144 inlet~ pad;
#X text 183 113 zero-padded;
#X text 43 245 The default \, if no method is specified \, is sample/hold.
;
#X connect 1 0 5 0;
#X connect 2 0 7 0;
#X connect 4 0 3 0;
#X connect 6 0 5 0;
#X connect 8 0 7 0;
#X connect 12 0 3 0;
#X restore 37 295 pd test-subpatch-upsampled;
#N canvas 516 374 534 251 test-subpatch-downsampled 0;
#X obj 336 159 outlet~ lin;
#X text 185 179 sample/hold;
#X text 333 183 linear interpolation;
#X text 258 35 upsampling methods:;
#X obj 101 33 block~ 32 1 0.5;
#X text 27 175 interleaved zeros;
#X obj 188 89 tabreceive~ \$0-tab;
#X obj 32 152 outlet~ pad;
#X obj 188 155 outlet~ hold;
#X connect 6 0 0 0;
#X connect 6 0 7 0;
#X connect 6 0 8 0;
#X restore 41 339 pd test-subpatch-downsampled;
#X msg 192 540 \; pd compatibility 0.43;
#X text 51 452 COMPATIBILITY NOTE: in Pd versions before 0.44 \, the
default method was "pad". To get the old behavior \, either change
the patch to specify "pad" \, or set "compatibility" to 0.43 in Pd's
command line or by a message:;
#X text 45 11 A subpatch can be reblocked to a higher or lower sample
rate. The inlet~ and outlet~ objects offer a choice of three upsampling
methods (the inlet~ upsamples when entering a subpatch with a higher
sample rate and the outlet~ upsamples when leaving a subpatch of lower
sample rate \, as demonstrated below). There is no corresponding choice
of downsampling method - downsampling is done simply by dropping the
extra samples., f 62;
#X obj 349 340 loadbang;
#X connect 1 0 0 0;
#X connect 3 0 2 0;
#X connect 5 0 4 0;
#X connect 8 0 7 0;
#X connect 10 0 9 0;
#X connect 11 0 12 0;
#X connect 11 0 12 2;
#X connect 11 0 9 0;
#X connect 11 0 12 1;
#X connect 13 0 0 0;
#X connect 13 1 2 0;
#X connect 13 2 4 0;
#X connect 17 0 8 0;
#X restore 97 502 pd up/downsampling;
#X text 350 577 updated for Pd version 0.49;
#X text 76 199 You can put inlets and outlets by making "inlet" objects
in the subpatch (open the patch below to see them.);
#N canvas 413 114 532 353 inlets-and-outlets 0;
#X obj 65 83 inlet;
#X text 17 53 control inlet for receiving messages;
#X floatatom 65 111 0 0 0 0 - - -;
#X floatatom 68 212 0 0 0 0 - - -;
#X obj 68 244 outlet;
#X text 32 182 control outlet for sending message;
#X obj 400 78 inlet~;
#X obj 400 129 print~;
#X msg 415 103 bang;
#X obj 399 271 outlet~;
#X obj 399 245 sig~ 34;
#X text 393 32 same for;
#X text 394 51 signals.;
#X connect 0 0 2 0;
#X connect 3 0 4 0;
#X connect 6 0 7 0;
#X connect 8 0 7 0;
#X connect 10 0 9 0;
#X restore 118 317 pd inlets-and-outlets;
#X text 57 405 inlet~ objects have more features and an additional
inlet and two additional outlets. The inlet~ and outlet~ objects can
also deal with up/downsampling - see subpatches below for examples.
, f 64;
#N canvas 273 115 958 414 inlet~ 0;
#X obj 600 98 sig~ 42;
#X msg 621 129 foo bar;
#X floatatom 643 163 5 0 0 0 - - -, f 5;
#X text 692 161 <= a float is also promoted to signal and becomes the
default signal value, f 27;
#N canvas 666 411 326 265 extra-outlets 0;
#X obj 83 63 inlet~;
#X obj 122 99 outlet;
#X obj 102 142 outlet;
#X obj 83 190 outlet~;
#X text 177 100 <= connectivity;
#X text 155 142 <= messages;
#X text 143 190 <= signal;
#X connect 0 0 3 0;
#X connect 0 1 2 0;
#X connect 0 2 1 0;
#X restore 600 238 pd extra-outlets;
#X text 493 29 The inlet~ object can also receive messages and they
are routed to its 2nd outlet. The 3rd outlets sends a count of connections
, f 52;
#X text 518 136 connect =>;
#X text 724 238 <= click and open;
#X obj 709 272 print connectivity;
#X obj 654 308 print messages;
#X obj 600 340 snapshot~;
#X floatatom 600 376 5 0 0 0 - - -, f 5;
#X obj 505 246 loadbang;
#X obj 505 274 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 505 298 metro 100;
#X obj 202 267 inlet~ 3;
#X obj 202 326 snapshot~;
#X floatatom 202 362 5 0 0 0 - - -, f 5;
#X obj 107 232 loadbang;
#X obj 107 260 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 107 284 metro 100;
#X floatatom 202 226 5 0 0 0 - - -, f 5;
#X text 27 39 A float argument sets the initial audio output. This
is needed to make abstractions behave like externals \, where you can
give it an argument to load a default value.;
#X text 27 92 You can also set this value via the inlet \, which is
needed for special cases where you check the abstraction for arguments
and load values accordingly. For instance \, an optional first argument
can be a symbol \, then you need to get the value from the 2nd argument
into the inlet.;
#X text 243 227 <= sets default value;
#X connect 0 0 4 0;
#X connect 1 0 4 0;
#X connect 2 0 4 0;
#X connect 4 0 10 0;
#X connect 4 1 9 0;
#X connect 4 2 8 0;
#X connect 10 0 11 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 14 0 10 0;
#X connect 15 0 16 0;
#X connect 16 0 17 0;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 20 0 16 0;
#X connect 21 0 15 0;
#X restore 157 472 pd inlet~;
#X text 233 502 <= details on up/downsampling;
#X text 231 473 <= details on inlet~'s extra features;
#X msg 413 329 \; pd dsp 1;
#X connect 13 0 25 1;
#X connect 14 0 25 0;
#X connect 21 0 12 0;
#X connect 25 0 15 0;
#X connect 25 1 12 0;
